name: Render and Deploy Quarto Site

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Permissions requises par GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Évite les déploiements concurrents
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Quarto (stable)
      - uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: "latest"   # ou épingle une version, ex: "1.4.554"

      # R (dernière release : 4.4/4.5)
      - uses: r-lib/actions/setup-r@v2
        id: setup-r
        with:
          r-version: "release"

      # Dépendances système utiles (si tu utilises {sf}, {arrow}, etc. — sans {terra})
      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            make \
            cmake \
            gdal-bin \
            libgdal-dev \
            libproj-dev \
            libudunits2-dev \
            libgeos-dev \
            libpng-dev

      # Utiliser Posit Package Manager (binaires CRAN quand dispo)
      - name: Set CRAN repo
        run: echo "options(repos = c(CRAN='https://packagemanager.posit.co/cran/latest'))" >> ~/.Rprofile

      # Cache des packages R, clé = OS + version R installée + renv.lock
      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ steps.setup-r.outputs.installed-r-version }}-${{ hashFiles('**/renv.lock') }}
          restore-keys: ${{ runner.os }}-r-${{ steps.setup-r.outputs.installed-r-version }}-

      # Restaurer l'environnement {renv}
      - name: Restore R packages with renv
        run: |
          Rscript -e 'install.packages("renv")'
          Rscript -e 'renv::restore(prompt = FALSE)'

      # Rendre le projet Quarto
      - name: Render Quarto Project
        run: quarto render

      # Préparer l'artefact pour GitHub Pages
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
