{"title":"Requete SQL Pamplemousse","markdown":{"yaml":{"title":"Requete SQL Pamplemousse"},"containsRefs":false,"markdown":"\n\n---- REQUETE SIMPLE ----\n\nSELECT \n  e.nom,\n  e.prenom,\n  modu.code_module,\n  modu.libelle AS module,  \n  m.code_matiere,\n  m.intitule,\n  m.coefficient,\n  m.credit_ects,\n  moy.moyenne,\n  moy.rang,\n  moy.rang_max,\n  moy.rattrapage,\n  e.id_etudiant,\n  m.id_matiere,\n  modu.id_module\nFROM moyenne moy\nINNER JOIN matiere m ON (m.id_matiere=moy.id_matiere)\nINNER JOIN module modu ON (modu.id_module=m.id_module)\nINNER JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)\n\n---- REQUETE AMELIOREE (notamment pour avoir les voies et les années) ----\n\nSELECT \naux_voie.voie_lib,\ne.nom,\ne.prenom,\ne.libelle_etat_civil,\ne.id_etudiant,\nmo.libelle AS ue,\nm.intitule AS matiere,\nm.code_matiere AS code_matiere,\nROUND(moy.moyenne,2) AS moyenne_matiere,\nROUND(moymo.moyenne,2) AS moyenne_ue,\ne.paysnai,\ne.id_ref_paysnai,\ne.id_nationalite,\ne.libelle_statut_etudiant,\ne.concours_origine,\ne.concours_annee,\ne.etab_origine_formation,\ne.bac_annee,\ne.bac_mention,\ne.certif_anglais_org,\ne.certif_anglais_score,\ne.toeic\nFROM moyenne moy\nLEFT JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)\nLEFT JOIN matiere m ON (m.id_matiere=moy.id_matiere)\nLEFT JOIN module mo ON (m.id_module=mo.id_module)\nLEFT JOIN moyenne_module moymo ON (moymo.id_module=m.id_module AND moymo.id_etudiant=e.id_etudiant)\nLEFT JOIN (\n\tSELECT \n\t  ve.id_etudiant, \n\t  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.lib) AS voie_lib\n\tFROM voie_etudiant ve\n\tINNER JOIN voie v ON (v.id_voie=ve.id_voie)\n\tGROUP BY ve.id_etudiant\n) aux_voie ON (aux_voie.id_etudiant=e.id_etudiant)\nGROUP BY \n  e.id_etudiant, \n  moymo.id_module, \n  moy.id_matiere\nORDER BY\n  aux_voie.voie_lib,\n  e.id_etudiant DESC\n\n\n---- REQUETE AUGMENTEE (pour avoir les redoublements) -------\n\nSELECT \n\n  annee,\n  situation,\n  nom,\n  id_etudiant,\n  date_naissance,\n  sexe,\n  double_diplome,\n  autre_diplome,\n  redoublement,\n  att_ing,\n  bac_annee,\n  bac_spe1,\n  bac_spe2,\n  bac_mention,\n  concours_origine,\n  situation_avant,\n  cpge,\n  bourse,\n  bourse_type,\n  bourse_montant,\n  id_pcs_pere,\n  id_pcs_mere,\n\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES1',ROUND(groupe_moyenne,2),NULL)) AS MES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS1',ROUND(groupe_moyenne,2),NULL)) AS MHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS1',ROUND(groupe_moyenne,2),NULL)) AS MIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS1',ROUND(groupe_moyenne,2),NULL)) AS MSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES2',ROUND(groupe_moyenne,2),NULL)) AS MES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS2',ROUND(groupe_moyenne,2),NULL)) AS MHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS2',ROUND(groupe_moyenne,2),NULL)) AS MIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS2',ROUND(groupe_moyenne,2),NULL)) AS MSS2,\n\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS1',ROUND(semestre_moyenne,2),NULL)) AS MGS1,\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS2',ROUND(semestre_moyenne,2),NULL)) AS MGS2,\n\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES1',groupe_ratt,NULL)) AS RES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS1',groupe_ratt,NULL)) AS RHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS1',groupe_ratt,NULL)) AS RIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS1',groupe_ratt,NULL)) AS RSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES2',groupe_ratt,NULL)) AS RES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS2',groupe_ratt,NULL)) AS RHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS2',groupe_ratt,NULL)) AS RIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS2',groupe_ratt,NULL)) AS RSS2,\n  AV\nFROM (\nSELECT \n  e.id_etudiant,\n  DATE_FORMAT(e.datenai,'%d/%m/%Y') AS date_naissance,\n  RIGHT(DATABASE(),4) AS annee,\n  CONCAT(nom,' ',prenom) AS nom,\n  CASE\n    WHEN e.libelle_etat_civil IN ('Monsieur','M.') THEN \"1\"\n    WHEN e.libelle_etat_civil IN ('Madame','Mme','Mademoiselle') THEN \"2\"\n    ELSE \"?\"\n  END AS sexe,\n  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.ordre) AS situation,\n  `diplome_double1` AS double_diplome,\n  `diplome_autre1` AS autre_diplome,\n  IF(MAX(IFNULL(v.niveau,0))=MAX(IFNULL(v_avant.niveau,0)),1,0) AS redoublement,\n  IF(GROUP_CONCAT(DISTINCT v.libelle ORDER BY v.ordre) LIKE '%Attaché%','attaché','ingénieur') AS att_ing,\n  bac_annee,\n  bac_serie AS `bac_spe1`,\n  NULL as `bac_spe2`,\n  bac_mention.libelle AS `bac_mention`,-- `id_ref_bac_mention`\n  `concours_origine`,\n  rsp.libelle AS situation_avant,\n  cpge.libelle AS cpge,\n  IF(IFNULL(`type_bourse`,'')='',0,1) AS bourse,\n  `type_bourse` AS bourse_type,\n  `bourse_montant`,\n  `id_pcs_pere`,\n  `id_pcs_mere`,\n  groupe.id_periode,\n  groupe.cat_note AS groupe_cat_note,\n  groupe.cat_ratt AS groupe_cat_ratt,\n  groupe.moyenne AS groupe_moyenne,\n  groupe.ratt AS groupe_ratt,\n  semestre.cat_note AS semestre_cat_note,\n  semestre.moyenne AS semestre_moyenne,\n  IF(com.commentaire LIKE '%année validée%',1,0) AS AV\nFROM etudiant e\nINNER JOIN voie_etudiant ve ON (ve.id_etudiant=e.id_etudiant)\nINNER JOIN voie v ON (v.id_voie=ve.id_voie AND v.cle_voie=1 AND v.voie_option=0)\nLEFT JOIN commentaire com ON (com.id_etudiant=e.id_etudiant)\nLEFT JOIN `ref_cpge` cpge ON (cpge.id_ref_cpge=e.id_ref_cpge)\nLEFT JOIN `ref_bac_mention` bac_mention ON (bac_mention.id_ref_bac_mention=e.id_ref_bac_mention)\nLEFT JOIN `ref_situation_pre` rsp ON (rsp.id_ref_situation_pre=e.id_ref_situation_pre)\nLEFT JOIN ensai_{annee_base_avant}.voie_etudiant ve_avant ON (ve_avant.id_etudiant=e.id_etudiant)\nLEFT JOIN ensai_{annee_base_avant}.voie v_avant ON (v_avant.id_voie=ve_avant.id_voie AND v_avant.cle_voie=1)\nLEFT JOIN (\nSELECT \n  moy.id_etudiant,\n  CONCAT('M',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_note,\n  CONCAT('R',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_ratt,\n  modu.id_periode,\n  SUM(moy.moyenne*m.coefficient)/SUM(m.coefficient) AS moyenne,\n  SUM(moy.rattrapage) AS ratt\nFROM matiere m\nINNER JOIN `ref_type_matiere` rtm ON (rtm.id_ref_type_matiere=m.id_type_matiere)\nINNER JOIN module modu ON (modu.id_module=m.id_module)\nINNER JOIN moyenne moy ON (moy.id_matiere=m.id_matiere)\nWHERE \n  m.bonus=0\nGROUP BY\n  moy.id_etudiant,\n  modu.id_periode,\n  m.id_type_matiere\n) AS groupe ON (e.id_etudiant=groupe.id_etudiant)\nLEFT JOIN (\nSELECT \n  CONCAT('MGS',modu.id_periode) AS  cat_note,\n  modu.id_periode,\n  mmoy.id_etudiant,\n  SUM(mmoy.moyenne*mmoy.coefficient)/SUM(mmoy.coefficient) AS moyenne\nFROM `moyenne_module` mmoy\nINNER JOIN module modu ON (modu.id_module=mmoy.id_module)\nWHERE \n  IFNULL(modu.id_periode,0)>0 AND\n  mmoy.moyenne IS NOT NULL\nGROUP BY\n  modu.id_periode,\n  mmoy.id_etudiant\n) AS semestre ON (\n  e.id_etudiant=semestre.id_etudiant AND \n  groupe.id_periode=semestre.id_periode\n)\nGROUP BY\n  e.id_etudiant,\n  groupe.cat_note\n) AS aide\nGROUP BY \n  id_etudiant\nHAVING \n  MGS1 IS NOT NULL OR\n  MGS2 IS NOT NULL\nORDER BY\n  situation,\n  nom\n\n\n---- REQUETE ENCORE AMELIOREE (+ d'informations) ------\n\nSELECT \n  annee,\n  situation,\n  nom,\n  id_etudiant,\n  date_naissance,\n  sexe,\n  double_diplome,\n  autre_diplome,\n  redoublement,\n  att_ing,\n  bac_annee,\n  bac_spe1,\n  bac_spe2,\n  bac_mention,\n  concours_origine,\n  situation_avant,\n  cpge,\n  bourse,\n  bourse_type,\n  bourse_montant,\n  id_pcs_pere,\n  id_pcs_mere,\n  paysnai,\n  id_ref_paysnai,\n  id_nationalite,\n  concours_annee,\n  etab_origine_formation,\n  certif_anglais_org,\n  certif_anglais_score,\n  toeic,\n  \n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES1',ROUND(groupe_moyenne,2),NULL)) AS MES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS1',ROUND(groupe_moyenne,2),NULL)) AS MHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS1',ROUND(groupe_moyenne,2),NULL)) AS MIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS1',ROUND(groupe_moyenne,2),NULL)) AS MSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES2',ROUND(groupe_moyenne,2),NULL)) AS MES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS2',ROUND(groupe_moyenne,2),NULL)) AS MHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS2',ROUND(groupe_moyenne,2),NULL)) AS MIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS2',ROUND(groupe_moyenne,2),NULL)) AS MSS2,\n\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS1',ROUND(semestre_moyenne,2),NULL)) AS MGS1,\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS2',ROUND(semestre_moyenne,2),NULL)) AS MGS2,\n\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES1',groupe_ratt,NULL)) AS RES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS1',groupe_ratt,NULL)) AS RHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS1',groupe_ratt,NULL)) AS RIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS1',groupe_ratt,NULL)) AS RSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES2',groupe_ratt,NULL)) AS RES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS2',groupe_ratt,NULL)) AS RHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS2',groupe_ratt,NULL)) AS RIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS2',groupe_ratt,NULL)) AS RSS2,\n  AV\nFROM (\nSELECT \n  e.id_etudiant,\n  DATE_FORMAT(e.datenai,'%d/%m/%Y') AS date_naissance,\n  RIGHT(DATABASE(),4) AS annee,\n  CONCAT(nom,' ',prenom) AS nom,\n  CASE\n    WHEN e.libelle_etat_civil IN ('Monsieur','M.') THEN \"1\"\n    WHEN e.libelle_etat_civil IN ('Madame','Mme','Mademoiselle') THEN \"2\"\n    ELSE \"?\"\n  END AS sexe,\n  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.ordre) AS situation,\n  `diplome_double1` AS double_diplome,\n  `diplome_autre1` AS autre_diplome,\n  IF(MAX(IFNULL(v.niveau,0))=MAX(IFNULL(v_avant.niveau,0)),1,0) AS redoublement,\n  IF(GROUP_CONCAT(DISTINCT v.libelle ORDER BY v.ordre) LIKE '%Attaché%','attaché','ingénieur') AS att_ing,\n  bac_annee,\n  bac_serie AS `bac_spe1`,\n  NULL as `bac_spe2`,\n  bac_mention.libelle AS `bac_mention`,-- `id_ref_bac_mention`\n  `concours_origine`,\n  rsp.libelle AS situation_avant,\n  cpge.libelle AS cpge,\n  IF(IFNULL(`type_bourse`,'')='',0,1) AS bourse,\n  `type_bourse` AS bourse_type,\n  `bourse_montant`,\n  `id_pcs_pere`,\n  `id_pcs_mere`,\n  groupe.id_periode,\n  groupe.cat_note AS groupe_cat_note,\n  groupe.cat_ratt AS groupe_cat_ratt,\n  groupe.moyenne AS groupe_moyenne,\n  groupe.ratt AS groupe_ratt,\n  semestre.cat_note AS semestre_cat_note,\n  semestre.moyenne AS semestre_moyenne,\n  IF(com.commentaire LIKE '%année validée%',1,0) AS AV,\n  e.paysnai,\n  e.id_ref_paysnai,\n  e.id_nationalite,\n  e.concours_annee,\n  e.etab_origine_formation,\n  e.certif_anglais_org,\n  e.certif_anglais_score,\n  e.toeic\n\nFROM etudiant e\nINNER JOIN voie_etudiant ve ON (ve.id_etudiant=e.id_etudiant)\nINNER JOIN voie v ON (v.id_voie=ve.id_voie AND v.cle_voie=1 AND v.voie_option=0)\nLEFT JOIN commentaire com ON (com.id_etudiant=e.id_etudiant)\nLEFT JOIN `ref_cpge` cpge ON (cpge.id_ref_cpge=e.id_ref_cpge)\nLEFT JOIN `ref_bac_mention` bac_mention ON (bac_mention.id_ref_bac_mention=e.id_ref_bac_mention)\nLEFT JOIN `ref_situation_pre` rsp ON (rsp.id_ref_situation_pre=e.id_ref_situation_pre)\nLEFT JOIN ensai_{annee_base_avant}.voie_etudiant ve_avant ON (ve_avant.id_etudiant=e.id_etudiant)\nLEFT JOIN ensai_{annee_base_avant}.voie v_avant ON (v_avant.id_voie=ve_avant.id_voie AND v_avant.cle_voie=1)\nLEFT JOIN (\nSELECT \n  moy.id_etudiant,\n  CONCAT('M',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_note,\n  CONCAT('R',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_ratt,\n  modu.id_periode,\n  SUM(moy.moyenne*m.coefficient)/SUM(m.coefficient) AS moyenne,\n  SUM(moy.rattrapage) AS ratt\nFROM matiere m\nINNER JOIN `ref_type_matiere` rtm ON (rtm.id_ref_type_matiere=m.id_type_matiere)\nINNER JOIN module modu ON (modu.id_module=m.id_module)\nINNER JOIN moyenne moy ON (moy.id_matiere=m.id_matiere)\nWHERE \n  m.bonus=0\nGROUP BY\n  moy.id_etudiant,\n  modu.id_periode,\n  m.id_type_matiere\n) AS groupe ON (e.id_etudiant=groupe.id_etudiant)\nLEFT JOIN (\nSELECT \n  CONCAT('MGS',modu.id_periode) AS  cat_note,\n  modu.id_periode,\n  mmoy.id_etudiant,\n  SUM(mmoy.moyenne*mmoy.coefficient)/SUM(mmoy.coefficient) AS moyenne\nFROM `moyenne_module` mmoy\nINNER JOIN module modu ON (modu.id_module=mmoy.id_module)\nWHERE \n  IFNULL(modu.id_periode,0)>0 AND\n  mmoy.moyenne IS NOT NULL\nGROUP BY\n  modu.id_periode,\n  mmoy.id_etudiant\n) AS semestre ON (\n  e.id_etudiant=semestre.id_etudiant AND \n  groupe.id_periode=semestre.id_periode\n)\nGROUP BY\n  e.id_etudiant,\n  groupe.cat_note\n) AS aide\nGROUP BY \n  id_etudiant\nHAVING \n  MGS1 IS NOT NULL OR\n  MGS2 IS NOT NULL\nORDER BY\n  situation,\n  nom\n\n----- DERNIERE REQUETE -----\n\n\nSELECT \nRIGHT(DATABASE(),4) AS annee,\naux_voie.voie_lib,\ne.nom,\ne.prenom,\ne.libelle_etat_civil,\ne.id_etudiant,\nmo.libelle AS ue,\nm.id_type_matiere,\nm.intitule AS matiere,\nm.code_matiere AS code_matiere,\nROUND(moy.moyenne,2) AS moyenne_matiere,\nROUND(moymo.moyenne,2) AS moyenne_ue,\ne.paysnai,\ne.id_ref_paysnai,\ne.id_nationalite,\ne.libelle_statut_etudiant,\ne.concours_origine,\ne.concours_annee,\ne.etab_origine_formation,\ne.bac_annee,\ne.bac_mention,\ne.certif_anglais_org,\ne.certif_anglais_score,\ne.toeic\nFROM moyenne moy\nLEFT JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)\nLEFT JOIN matiere m ON (m.id_matiere=moy.id_matiere)\nLEFT JOIN module mo ON (m.id_module=mo.id_module)\nLEFT JOIN moyenne_module moymo ON (moymo.id_module=m.id_module AND moymo.id_etudiant=e.id_etudiant)\nLEFT JOIN (\n\tSELECT \n\t  ve.id_etudiant, \n\t  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.lib) AS voie_lib\n\tFROM voie_etudiant ve\n\tINNER JOIN voie v ON (v.id_voie=ve.id_voie)\n\tGROUP BY ve.id_etudiant\n) aux_voie ON (aux_voie.id_etudiant=e.id_etudiant)\nGROUP BY \n  e.id_etudiant, \n  moymo.id_module, \n  moy.id_matiere\nORDER BY\n  aux_voie.voie_lib,\n  e.id_etudiant DESC","srcMarkdownNoYaml":"\n\n---- REQUETE SIMPLE ----\n\nSELECT \n  e.nom,\n  e.prenom,\n  modu.code_module,\n  modu.libelle AS module,  \n  m.code_matiere,\n  m.intitule,\n  m.coefficient,\n  m.credit_ects,\n  moy.moyenne,\n  moy.rang,\n  moy.rang_max,\n  moy.rattrapage,\n  e.id_etudiant,\n  m.id_matiere,\n  modu.id_module\nFROM moyenne moy\nINNER JOIN matiere m ON (m.id_matiere=moy.id_matiere)\nINNER JOIN module modu ON (modu.id_module=m.id_module)\nINNER JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)\n\n---- REQUETE AMELIOREE (notamment pour avoir les voies et les années) ----\n\nSELECT \naux_voie.voie_lib,\ne.nom,\ne.prenom,\ne.libelle_etat_civil,\ne.id_etudiant,\nmo.libelle AS ue,\nm.intitule AS matiere,\nm.code_matiere AS code_matiere,\nROUND(moy.moyenne,2) AS moyenne_matiere,\nROUND(moymo.moyenne,2) AS moyenne_ue,\ne.paysnai,\ne.id_ref_paysnai,\ne.id_nationalite,\ne.libelle_statut_etudiant,\ne.concours_origine,\ne.concours_annee,\ne.etab_origine_formation,\ne.bac_annee,\ne.bac_mention,\ne.certif_anglais_org,\ne.certif_anglais_score,\ne.toeic\nFROM moyenne moy\nLEFT JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)\nLEFT JOIN matiere m ON (m.id_matiere=moy.id_matiere)\nLEFT JOIN module mo ON (m.id_module=mo.id_module)\nLEFT JOIN moyenne_module moymo ON (moymo.id_module=m.id_module AND moymo.id_etudiant=e.id_etudiant)\nLEFT JOIN (\n\tSELECT \n\t  ve.id_etudiant, \n\t  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.lib) AS voie_lib\n\tFROM voie_etudiant ve\n\tINNER JOIN voie v ON (v.id_voie=ve.id_voie)\n\tGROUP BY ve.id_etudiant\n) aux_voie ON (aux_voie.id_etudiant=e.id_etudiant)\nGROUP BY \n  e.id_etudiant, \n  moymo.id_module, \n  moy.id_matiere\nORDER BY\n  aux_voie.voie_lib,\n  e.id_etudiant DESC\n\n\n---- REQUETE AUGMENTEE (pour avoir les redoublements) -------\n\nSELECT \n\n  annee,\n  situation,\n  nom,\n  id_etudiant,\n  date_naissance,\n  sexe,\n  double_diplome,\n  autre_diplome,\n  redoublement,\n  att_ing,\n  bac_annee,\n  bac_spe1,\n  bac_spe2,\n  bac_mention,\n  concours_origine,\n  situation_avant,\n  cpge,\n  bourse,\n  bourse_type,\n  bourse_montant,\n  id_pcs_pere,\n  id_pcs_mere,\n\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES1',ROUND(groupe_moyenne,2),NULL)) AS MES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS1',ROUND(groupe_moyenne,2),NULL)) AS MHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS1',ROUND(groupe_moyenne,2),NULL)) AS MIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS1',ROUND(groupe_moyenne,2),NULL)) AS MSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES2',ROUND(groupe_moyenne,2),NULL)) AS MES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS2',ROUND(groupe_moyenne,2),NULL)) AS MHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS2',ROUND(groupe_moyenne,2),NULL)) AS MIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS2',ROUND(groupe_moyenne,2),NULL)) AS MSS2,\n\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS1',ROUND(semestre_moyenne,2),NULL)) AS MGS1,\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS2',ROUND(semestre_moyenne,2),NULL)) AS MGS2,\n\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES1',groupe_ratt,NULL)) AS RES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS1',groupe_ratt,NULL)) AS RHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS1',groupe_ratt,NULL)) AS RIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS1',groupe_ratt,NULL)) AS RSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES2',groupe_ratt,NULL)) AS RES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS2',groupe_ratt,NULL)) AS RHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS2',groupe_ratt,NULL)) AS RIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS2',groupe_ratt,NULL)) AS RSS2,\n  AV\nFROM (\nSELECT \n  e.id_etudiant,\n  DATE_FORMAT(e.datenai,'%d/%m/%Y') AS date_naissance,\n  RIGHT(DATABASE(),4) AS annee,\n  CONCAT(nom,' ',prenom) AS nom,\n  CASE\n    WHEN e.libelle_etat_civil IN ('Monsieur','M.') THEN \"1\"\n    WHEN e.libelle_etat_civil IN ('Madame','Mme','Mademoiselle') THEN \"2\"\n    ELSE \"?\"\n  END AS sexe,\n  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.ordre) AS situation,\n  `diplome_double1` AS double_diplome,\n  `diplome_autre1` AS autre_diplome,\n  IF(MAX(IFNULL(v.niveau,0))=MAX(IFNULL(v_avant.niveau,0)),1,0) AS redoublement,\n  IF(GROUP_CONCAT(DISTINCT v.libelle ORDER BY v.ordre) LIKE '%Attaché%','attaché','ingénieur') AS att_ing,\n  bac_annee,\n  bac_serie AS `bac_spe1`,\n  NULL as `bac_spe2`,\n  bac_mention.libelle AS `bac_mention`,-- `id_ref_bac_mention`\n  `concours_origine`,\n  rsp.libelle AS situation_avant,\n  cpge.libelle AS cpge,\n  IF(IFNULL(`type_bourse`,'')='',0,1) AS bourse,\n  `type_bourse` AS bourse_type,\n  `bourse_montant`,\n  `id_pcs_pere`,\n  `id_pcs_mere`,\n  groupe.id_periode,\n  groupe.cat_note AS groupe_cat_note,\n  groupe.cat_ratt AS groupe_cat_ratt,\n  groupe.moyenne AS groupe_moyenne,\n  groupe.ratt AS groupe_ratt,\n  semestre.cat_note AS semestre_cat_note,\n  semestre.moyenne AS semestre_moyenne,\n  IF(com.commentaire LIKE '%année validée%',1,0) AS AV\nFROM etudiant e\nINNER JOIN voie_etudiant ve ON (ve.id_etudiant=e.id_etudiant)\nINNER JOIN voie v ON (v.id_voie=ve.id_voie AND v.cle_voie=1 AND v.voie_option=0)\nLEFT JOIN commentaire com ON (com.id_etudiant=e.id_etudiant)\nLEFT JOIN `ref_cpge` cpge ON (cpge.id_ref_cpge=e.id_ref_cpge)\nLEFT JOIN `ref_bac_mention` bac_mention ON (bac_mention.id_ref_bac_mention=e.id_ref_bac_mention)\nLEFT JOIN `ref_situation_pre` rsp ON (rsp.id_ref_situation_pre=e.id_ref_situation_pre)\nLEFT JOIN ensai_{annee_base_avant}.voie_etudiant ve_avant ON (ve_avant.id_etudiant=e.id_etudiant)\nLEFT JOIN ensai_{annee_base_avant}.voie v_avant ON (v_avant.id_voie=ve_avant.id_voie AND v_avant.cle_voie=1)\nLEFT JOIN (\nSELECT \n  moy.id_etudiant,\n  CONCAT('M',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_note,\n  CONCAT('R',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_ratt,\n  modu.id_periode,\n  SUM(moy.moyenne*m.coefficient)/SUM(m.coefficient) AS moyenne,\n  SUM(moy.rattrapage) AS ratt\nFROM matiere m\nINNER JOIN `ref_type_matiere` rtm ON (rtm.id_ref_type_matiere=m.id_type_matiere)\nINNER JOIN module modu ON (modu.id_module=m.id_module)\nINNER JOIN moyenne moy ON (moy.id_matiere=m.id_matiere)\nWHERE \n  m.bonus=0\nGROUP BY\n  moy.id_etudiant,\n  modu.id_periode,\n  m.id_type_matiere\n) AS groupe ON (e.id_etudiant=groupe.id_etudiant)\nLEFT JOIN (\nSELECT \n  CONCAT('MGS',modu.id_periode) AS  cat_note,\n  modu.id_periode,\n  mmoy.id_etudiant,\n  SUM(mmoy.moyenne*mmoy.coefficient)/SUM(mmoy.coefficient) AS moyenne\nFROM `moyenne_module` mmoy\nINNER JOIN module modu ON (modu.id_module=mmoy.id_module)\nWHERE \n  IFNULL(modu.id_periode,0)>0 AND\n  mmoy.moyenne IS NOT NULL\nGROUP BY\n  modu.id_periode,\n  mmoy.id_etudiant\n) AS semestre ON (\n  e.id_etudiant=semestre.id_etudiant AND \n  groupe.id_periode=semestre.id_periode\n)\nGROUP BY\n  e.id_etudiant,\n  groupe.cat_note\n) AS aide\nGROUP BY \n  id_etudiant\nHAVING \n  MGS1 IS NOT NULL OR\n  MGS2 IS NOT NULL\nORDER BY\n  situation,\n  nom\n\n\n---- REQUETE ENCORE AMELIOREE (+ d'informations) ------\n\nSELECT \n  annee,\n  situation,\n  nom,\n  id_etudiant,\n  date_naissance,\n  sexe,\n  double_diplome,\n  autre_diplome,\n  redoublement,\n  att_ing,\n  bac_annee,\n  bac_spe1,\n  bac_spe2,\n  bac_mention,\n  concours_origine,\n  situation_avant,\n  cpge,\n  bourse,\n  bourse_type,\n  bourse_montant,\n  id_pcs_pere,\n  id_pcs_mere,\n  paysnai,\n  id_ref_paysnai,\n  id_nationalite,\n  concours_annee,\n  etab_origine_formation,\n  certif_anglais_org,\n  certif_anglais_score,\n  toeic,\n  \n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES1',ROUND(groupe_moyenne,2),NULL)) AS MES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS1',ROUND(groupe_moyenne,2),NULL)) AS MHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS1',ROUND(groupe_moyenne,2),NULL)) AS MIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS1',ROUND(groupe_moyenne,2),NULL)) AS MSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES2',ROUND(groupe_moyenne,2),NULL)) AS MES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS2',ROUND(groupe_moyenne,2),NULL)) AS MHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS2',ROUND(groupe_moyenne,2),NULL)) AS MIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS2',ROUND(groupe_moyenne,2),NULL)) AS MSS2,\n\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS1',ROUND(semestre_moyenne,2),NULL)) AS MGS1,\n  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS2',ROUND(semestre_moyenne,2),NULL)) AS MGS2,\n\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES1',groupe_ratt,NULL)) AS RES1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS1',groupe_ratt,NULL)) AS RHS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS1',groupe_ratt,NULL)) AS RIS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS1',groupe_ratt,NULL)) AS RSS1,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES2',groupe_ratt,NULL)) AS RES2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS2',groupe_ratt,NULL)) AS RHS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS2',groupe_ratt,NULL)) AS RIS2,\n  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS2',groupe_ratt,NULL)) AS RSS2,\n  AV\nFROM (\nSELECT \n  e.id_etudiant,\n  DATE_FORMAT(e.datenai,'%d/%m/%Y') AS date_naissance,\n  RIGHT(DATABASE(),4) AS annee,\n  CONCAT(nom,' ',prenom) AS nom,\n  CASE\n    WHEN e.libelle_etat_civil IN ('Monsieur','M.') THEN \"1\"\n    WHEN e.libelle_etat_civil IN ('Madame','Mme','Mademoiselle') THEN \"2\"\n    ELSE \"?\"\n  END AS sexe,\n  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.ordre) AS situation,\n  `diplome_double1` AS double_diplome,\n  `diplome_autre1` AS autre_diplome,\n  IF(MAX(IFNULL(v.niveau,0))=MAX(IFNULL(v_avant.niveau,0)),1,0) AS redoublement,\n  IF(GROUP_CONCAT(DISTINCT v.libelle ORDER BY v.ordre) LIKE '%Attaché%','attaché','ingénieur') AS att_ing,\n  bac_annee,\n  bac_serie AS `bac_spe1`,\n  NULL as `bac_spe2`,\n  bac_mention.libelle AS `bac_mention`,-- `id_ref_bac_mention`\n  `concours_origine`,\n  rsp.libelle AS situation_avant,\n  cpge.libelle AS cpge,\n  IF(IFNULL(`type_bourse`,'')='',0,1) AS bourse,\n  `type_bourse` AS bourse_type,\n  `bourse_montant`,\n  `id_pcs_pere`,\n  `id_pcs_mere`,\n  groupe.id_periode,\n  groupe.cat_note AS groupe_cat_note,\n  groupe.cat_ratt AS groupe_cat_ratt,\n  groupe.moyenne AS groupe_moyenne,\n  groupe.ratt AS groupe_ratt,\n  semestre.cat_note AS semestre_cat_note,\n  semestre.moyenne AS semestre_moyenne,\n  IF(com.commentaire LIKE '%année validée%',1,0) AS AV,\n  e.paysnai,\n  e.id_ref_paysnai,\n  e.id_nationalite,\n  e.concours_annee,\n  e.etab_origine_formation,\n  e.certif_anglais_org,\n  e.certif_anglais_score,\n  e.toeic\n\nFROM etudiant e\nINNER JOIN voie_etudiant ve ON (ve.id_etudiant=e.id_etudiant)\nINNER JOIN voie v ON (v.id_voie=ve.id_voie AND v.cle_voie=1 AND v.voie_option=0)\nLEFT JOIN commentaire com ON (com.id_etudiant=e.id_etudiant)\nLEFT JOIN `ref_cpge` cpge ON (cpge.id_ref_cpge=e.id_ref_cpge)\nLEFT JOIN `ref_bac_mention` bac_mention ON (bac_mention.id_ref_bac_mention=e.id_ref_bac_mention)\nLEFT JOIN `ref_situation_pre` rsp ON (rsp.id_ref_situation_pre=e.id_ref_situation_pre)\nLEFT JOIN ensai_{annee_base_avant}.voie_etudiant ve_avant ON (ve_avant.id_etudiant=e.id_etudiant)\nLEFT JOIN ensai_{annee_base_avant}.voie v_avant ON (v_avant.id_voie=ve_avant.id_voie AND v_avant.cle_voie=1)\nLEFT JOIN (\nSELECT \n  moy.id_etudiant,\n  CONCAT('M',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_note,\n  CONCAT('R',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_ratt,\n  modu.id_periode,\n  SUM(moy.moyenne*m.coefficient)/SUM(m.coefficient) AS moyenne,\n  SUM(moy.rattrapage) AS ratt\nFROM matiere m\nINNER JOIN `ref_type_matiere` rtm ON (rtm.id_ref_type_matiere=m.id_type_matiere)\nINNER JOIN module modu ON (modu.id_module=m.id_module)\nINNER JOIN moyenne moy ON (moy.id_matiere=m.id_matiere)\nWHERE \n  m.bonus=0\nGROUP BY\n  moy.id_etudiant,\n  modu.id_periode,\n  m.id_type_matiere\n) AS groupe ON (e.id_etudiant=groupe.id_etudiant)\nLEFT JOIN (\nSELECT \n  CONCAT('MGS',modu.id_periode) AS  cat_note,\n  modu.id_periode,\n  mmoy.id_etudiant,\n  SUM(mmoy.moyenne*mmoy.coefficient)/SUM(mmoy.coefficient) AS moyenne\nFROM `moyenne_module` mmoy\nINNER JOIN module modu ON (modu.id_module=mmoy.id_module)\nWHERE \n  IFNULL(modu.id_periode,0)>0 AND\n  mmoy.moyenne IS NOT NULL\nGROUP BY\n  modu.id_periode,\n  mmoy.id_etudiant\n) AS semestre ON (\n  e.id_etudiant=semestre.id_etudiant AND \n  groupe.id_periode=semestre.id_periode\n)\nGROUP BY\n  e.id_etudiant,\n  groupe.cat_note\n) AS aide\nGROUP BY \n  id_etudiant\nHAVING \n  MGS1 IS NOT NULL OR\n  MGS2 IS NOT NULL\nORDER BY\n  situation,\n  nom\n\n----- DERNIERE REQUETE -----\n\n\nSELECT \nRIGHT(DATABASE(),4) AS annee,\naux_voie.voie_lib,\ne.nom,\ne.prenom,\ne.libelle_etat_civil,\ne.id_etudiant,\nmo.libelle AS ue,\nm.id_type_matiere,\nm.intitule AS matiere,\nm.code_matiere AS code_matiere,\nROUND(moy.moyenne,2) AS moyenne_matiere,\nROUND(moymo.moyenne,2) AS moyenne_ue,\ne.paysnai,\ne.id_ref_paysnai,\ne.id_nationalite,\ne.libelle_statut_etudiant,\ne.concours_origine,\ne.concours_annee,\ne.etab_origine_formation,\ne.bac_annee,\ne.bac_mention,\ne.certif_anglais_org,\ne.certif_anglais_score,\ne.toeic\nFROM moyenne moy\nLEFT JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)\nLEFT JOIN matiere m ON (m.id_matiere=moy.id_matiere)\nLEFT JOIN module mo ON (m.id_module=mo.id_module)\nLEFT JOIN moyenne_module moymo ON (moymo.id_module=m.id_module AND moymo.id_etudiant=e.id_etudiant)\nLEFT JOIN (\n\tSELECT \n\t  ve.id_etudiant, \n\t  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.lib) AS voie_lib\n\tFROM voie_etudiant ve\n\tINNER JOIN voie v ON (v.id_voie=ve.id_voie)\n\tGROUP BY ve.id_etudiant\n) aux_voie ON (aux_voie.id_etudiant=e.id_etudiant)\nGROUP BY \n  e.id_etudiant, \n  moymo.id_module, \n  moy.id_matiere\nORDER BY\n  aux_voie.voie_lib,\n  e.id_etudiant DESC"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"Requête SQL.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","theme":{"light":"cosmo","dark":"solar"},"title":"Requete SQL Pamplemousse"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}