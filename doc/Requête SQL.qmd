---
title: "Requete SQL Pamplemousse"
---

---- REQUETE SIMPLE ----

SELECT 
  e.nom,
  e.prenom,
  modu.code_module,
  modu.libelle AS module,  
  m.code_matiere,
  m.intitule,
  m.coefficient,
  m.credit_ects,
  moy.moyenne,
  moy.rang,
  moy.rang_max,
  moy.rattrapage,
  e.id_etudiant,
  m.id_matiere,
  modu.id_module
FROM moyenne moy
INNER JOIN matiere m ON (m.id_matiere=moy.id_matiere)
INNER JOIN module modu ON (modu.id_module=m.id_module)
INNER JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)

---- REQUETE AMELIOREE (notamment pour avoir les voies et les années) ----

SELECT 
aux_voie.voie_lib,
e.nom,
e.prenom,
e.libelle_etat_civil,
e.id_etudiant,
mo.libelle AS ue,
m.intitule AS matiere,
m.code_matiere AS code_matiere,
ROUND(moy.moyenne,2) AS moyenne_matiere,
ROUND(moymo.moyenne,2) AS moyenne_ue,
e.paysnai,
e.id_ref_paysnai,
e.id_nationalite,
e.libelle_statut_etudiant,
e.concours_origine,
e.concours_annee,
e.etab_origine_formation,
e.bac_annee,
e.bac_mention,
e.certif_anglais_org,
e.certif_anglais_score,
e.toeic
FROM moyenne moy
LEFT JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)
LEFT JOIN matiere m ON (m.id_matiere=moy.id_matiere)
LEFT JOIN module mo ON (m.id_module=mo.id_module)
LEFT JOIN moyenne_module moymo ON (moymo.id_module=m.id_module AND moymo.id_etudiant=e.id_etudiant)
LEFT JOIN (
	SELECT 
	  ve.id_etudiant, 
	  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.lib) AS voie_lib
	FROM voie_etudiant ve
	INNER JOIN voie v ON (v.id_voie=ve.id_voie)
	GROUP BY ve.id_etudiant
) aux_voie ON (aux_voie.id_etudiant=e.id_etudiant)
GROUP BY 
  e.id_etudiant, 
  moymo.id_module, 
  moy.id_matiere
ORDER BY
  aux_voie.voie_lib,
  e.id_etudiant DESC


---- REQUETE AUGMENTEE (pour avoir les redoublements) -------

SELECT 

  annee,
  situation,
  nom,
  id_etudiant,
  date_naissance,
  sexe,
  double_diplome,
  autre_diplome,
  redoublement,
  att_ing,
  bac_annee,
  bac_spe1,
  bac_spe2,
  bac_mention,
  concours_origine,
  situation_avant,
  cpge,
  bourse,
  bourse_type,
  bourse_montant,
  id_pcs_pere,
  id_pcs_mere,

  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES1',ROUND(groupe_moyenne,2),NULL)) AS MES1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS1',ROUND(groupe_moyenne,2),NULL)) AS MHS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS1',ROUND(groupe_moyenne,2),NULL)) AS MIS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS1',ROUND(groupe_moyenne,2),NULL)) AS MSS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES2',ROUND(groupe_moyenne,2),NULL)) AS MES2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS2',ROUND(groupe_moyenne,2),NULL)) AS MHS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS2',ROUND(groupe_moyenne,2),NULL)) AS MIS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS2',ROUND(groupe_moyenne,2),NULL)) AS MSS2,

  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS1',ROUND(semestre_moyenne,2),NULL)) AS MGS1,
  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS2',ROUND(semestre_moyenne,2),NULL)) AS MGS2,

  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES1',groupe_ratt,NULL)) AS RES1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS1',groupe_ratt,NULL)) AS RHS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS1',groupe_ratt,NULL)) AS RIS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS1',groupe_ratt,NULL)) AS RSS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES2',groupe_ratt,NULL)) AS RES2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS2',groupe_ratt,NULL)) AS RHS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS2',groupe_ratt,NULL)) AS RIS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS2',groupe_ratt,NULL)) AS RSS2,
  AV
FROM (
SELECT 
  e.id_etudiant,
  DATE_FORMAT(e.datenai,'%d/%m/%Y') AS date_naissance,
  RIGHT(DATABASE(),4) AS annee,
  CONCAT(nom,' ',prenom) AS nom,
  CASE
    WHEN e.libelle_etat_civil IN ('Monsieur','M.') THEN "1"
    WHEN e.libelle_etat_civil IN ('Madame','Mme','Mademoiselle') THEN "2"
    ELSE "?"
  END AS sexe,
  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.ordre) AS situation,
  `diplome_double1` AS double_diplome,
  `diplome_autre1` AS autre_diplome,
  IF(MAX(IFNULL(v.niveau,0))=MAX(IFNULL(v_avant.niveau,0)),1,0) AS redoublement,
  IF(GROUP_CONCAT(DISTINCT v.libelle ORDER BY v.ordre) LIKE '%Attaché%','attaché','ingénieur') AS att_ing,
  bac_annee,
  bac_serie AS `bac_spe1`,
  NULL as `bac_spe2`,
  bac_mention.libelle AS `bac_mention`,-- `id_ref_bac_mention`
  `concours_origine`,
  rsp.libelle AS situation_avant,
  cpge.libelle AS cpge,
  IF(IFNULL(`type_bourse`,'')='',0,1) AS bourse,
  `type_bourse` AS bourse_type,
  `bourse_montant`,
  `id_pcs_pere`,
  `id_pcs_mere`,
  groupe.id_periode,
  groupe.cat_note AS groupe_cat_note,
  groupe.cat_ratt AS groupe_cat_ratt,
  groupe.moyenne AS groupe_moyenne,
  groupe.ratt AS groupe_ratt,
  semestre.cat_note AS semestre_cat_note,
  semestre.moyenne AS semestre_moyenne,
  IF(com.commentaire LIKE '%année validée%',1,0) AS AV
FROM etudiant e
INNER JOIN voie_etudiant ve ON (ve.id_etudiant=e.id_etudiant)
INNER JOIN voie v ON (v.id_voie=ve.id_voie AND v.cle_voie=1 AND v.voie_option=0)
LEFT JOIN commentaire com ON (com.id_etudiant=e.id_etudiant)
LEFT JOIN `ref_cpge` cpge ON (cpge.id_ref_cpge=e.id_ref_cpge)
LEFT JOIN `ref_bac_mention` bac_mention ON (bac_mention.id_ref_bac_mention=e.id_ref_bac_mention)
LEFT JOIN `ref_situation_pre` rsp ON (rsp.id_ref_situation_pre=e.id_ref_situation_pre)
LEFT JOIN ensai_{annee_base_avant}.voie_etudiant ve_avant ON (ve_avant.id_etudiant=e.id_etudiant)
LEFT JOIN ensai_{annee_base_avant}.voie v_avant ON (v_avant.id_voie=ve_avant.id_voie AND v_avant.cle_voie=1)
LEFT JOIN (
SELECT 
  moy.id_etudiant,
  CONCAT('M',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_note,
  CONCAT('R',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_ratt,
  modu.id_periode,
  SUM(moy.moyenne*m.coefficient)/SUM(m.coefficient) AS moyenne,
  SUM(moy.rattrapage) AS ratt
FROM matiere m
INNER JOIN `ref_type_matiere` rtm ON (rtm.id_ref_type_matiere=m.id_type_matiere)
INNER JOIN module modu ON (modu.id_module=m.id_module)
INNER JOIN moyenne moy ON (moy.id_matiere=m.id_matiere)
WHERE 
  m.bonus=0
GROUP BY
  moy.id_etudiant,
  modu.id_periode,
  m.id_type_matiere
) AS groupe ON (e.id_etudiant=groupe.id_etudiant)
LEFT JOIN (
SELECT 
  CONCAT('MGS',modu.id_periode) AS  cat_note,
  modu.id_periode,
  mmoy.id_etudiant,
  SUM(mmoy.moyenne*mmoy.coefficient)/SUM(mmoy.coefficient) AS moyenne
FROM `moyenne_module` mmoy
INNER JOIN module modu ON (modu.id_module=mmoy.id_module)
WHERE 
  IFNULL(modu.id_periode,0)>0 AND
  mmoy.moyenne IS NOT NULL
GROUP BY
  modu.id_periode,
  mmoy.id_etudiant
) AS semestre ON (
  e.id_etudiant=semestre.id_etudiant AND 
  groupe.id_periode=semestre.id_periode
)
GROUP BY
  e.id_etudiant,
  groupe.cat_note
) AS aide
GROUP BY 
  id_etudiant
HAVING 
  MGS1 IS NOT NULL OR
  MGS2 IS NOT NULL
ORDER BY
  situation,
  nom


---- REQUETE ENCORE AMELIOREE (+ d'informations) ------

SELECT 
  annee,
  situation,
  nom,
  id_etudiant,
  date_naissance,
  sexe,
  double_diplome,
  autre_diplome,
  redoublement,
  att_ing,
  bac_annee,
  bac_spe1,
  bac_spe2,
  bac_mention,
  concours_origine,
  situation_avant,
  cpge,
  bourse,
  bourse_type,
  bourse_montant,
  id_pcs_pere,
  id_pcs_mere,
  paysnai,
  id_ref_paysnai,
  id_nationalite,
  concours_annee,
  etab_origine_formation,
  certif_anglais_org,
  certif_anglais_score,
  toeic,
  
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES1',ROUND(groupe_moyenne,2),NULL)) AS MES1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS1',ROUND(groupe_moyenne,2),NULL)) AS MHS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS1',ROUND(groupe_moyenne,2),NULL)) AS MIS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS1',ROUND(groupe_moyenne,2),NULL)) AS MSS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MES2',ROUND(groupe_moyenne,2),NULL)) AS MES2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MHS2',ROUND(groupe_moyenne,2),NULL)) AS MHS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MIS2',ROUND(groupe_moyenne,2),NULL)) AS MIS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_note='MSS2',ROUND(groupe_moyenne,2),NULL)) AS MSS2,

  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS1',ROUND(semestre_moyenne,2),NULL)) AS MGS1,
  GROUP_CONCAT(DISTINCT IF(semestre_cat_note='MGS2',ROUND(semestre_moyenne,2),NULL)) AS MGS2,

  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES1',groupe_ratt,NULL)) AS RES1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS1',groupe_ratt,NULL)) AS RHS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS1',groupe_ratt,NULL)) AS RIS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS1',groupe_ratt,NULL)) AS RSS1,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RES2',groupe_ratt,NULL)) AS RES2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RHS2',groupe_ratt,NULL)) AS RHS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RIS2',groupe_ratt,NULL)) AS RIS2,
  GROUP_CONCAT(DISTINCT IF(groupe_cat_ratt='RSS2',groupe_ratt,NULL)) AS RSS2,
  AV
FROM (
SELECT 
  e.id_etudiant,
  DATE_FORMAT(e.datenai,'%d/%m/%Y') AS date_naissance,
  RIGHT(DATABASE(),4) AS annee,
  CONCAT(nom,' ',prenom) AS nom,
  CASE
    WHEN e.libelle_etat_civil IN ('Monsieur','M.') THEN "1"
    WHEN e.libelle_etat_civil IN ('Madame','Mme','Mademoiselle') THEN "2"
    ELSE "?"
  END AS sexe,
  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.ordre) AS situation,
  `diplome_double1` AS double_diplome,
  `diplome_autre1` AS autre_diplome,
  IF(MAX(IFNULL(v.niveau,0))=MAX(IFNULL(v_avant.niveau,0)),1,0) AS redoublement,
  IF(GROUP_CONCAT(DISTINCT v.libelle ORDER BY v.ordre) LIKE '%Attaché%','attaché','ingénieur') AS att_ing,
  bac_annee,
  bac_serie AS `bac_spe1`,
  NULL as `bac_spe2`,
  bac_mention.libelle AS `bac_mention`,-- `id_ref_bac_mention`
  `concours_origine`,
  rsp.libelle AS situation_avant,
  cpge.libelle AS cpge,
  IF(IFNULL(`type_bourse`,'')='',0,1) AS bourse,
  `type_bourse` AS bourse_type,
  `bourse_montant`,
  `id_pcs_pere`,
  `id_pcs_mere`,
  groupe.id_periode,
  groupe.cat_note AS groupe_cat_note,
  groupe.cat_ratt AS groupe_cat_ratt,
  groupe.moyenne AS groupe_moyenne,
  groupe.ratt AS groupe_ratt,
  semestre.cat_note AS semestre_cat_note,
  semestre.moyenne AS semestre_moyenne,
  IF(com.commentaire LIKE '%année validée%',1,0) AS AV,
  e.paysnai,
  e.id_ref_paysnai,
  e.id_nationalite,
  e.concours_annee,
  e.etab_origine_formation,
  e.certif_anglais_org,
  e.certif_anglais_score,
  e.toeic

FROM etudiant e
INNER JOIN voie_etudiant ve ON (ve.id_etudiant=e.id_etudiant)
INNER JOIN voie v ON (v.id_voie=ve.id_voie AND v.cle_voie=1 AND v.voie_option=0)
LEFT JOIN commentaire com ON (com.id_etudiant=e.id_etudiant)
LEFT JOIN `ref_cpge` cpge ON (cpge.id_ref_cpge=e.id_ref_cpge)
LEFT JOIN `ref_bac_mention` bac_mention ON (bac_mention.id_ref_bac_mention=e.id_ref_bac_mention)
LEFT JOIN `ref_situation_pre` rsp ON (rsp.id_ref_situation_pre=e.id_ref_situation_pre)
LEFT JOIN ensai_{annee_base_avant}.voie_etudiant ve_avant ON (ve_avant.id_etudiant=e.id_etudiant)
LEFT JOIN ensai_{annee_base_avant}.voie v_avant ON (v_avant.id_voie=ve_avant.id_voie AND v_avant.cle_voie=1)
LEFT JOIN (
SELECT 
  moy.id_etudiant,
  CONCAT('M',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_note,
  CONCAT('R',LEFT(rtm.lib,1),'S',modu.id_periode) AS cat_ratt,
  modu.id_periode,
  SUM(moy.moyenne*m.coefficient)/SUM(m.coefficient) AS moyenne,
  SUM(moy.rattrapage) AS ratt
FROM matiere m
INNER JOIN `ref_type_matiere` rtm ON (rtm.id_ref_type_matiere=m.id_type_matiere)
INNER JOIN module modu ON (modu.id_module=m.id_module)
INNER JOIN moyenne moy ON (moy.id_matiere=m.id_matiere)
WHERE 
  m.bonus=0
GROUP BY
  moy.id_etudiant,
  modu.id_periode,
  m.id_type_matiere
) AS groupe ON (e.id_etudiant=groupe.id_etudiant)
LEFT JOIN (
SELECT 
  CONCAT('MGS',modu.id_periode) AS  cat_note,
  modu.id_periode,
  mmoy.id_etudiant,
  SUM(mmoy.moyenne*mmoy.coefficient)/SUM(mmoy.coefficient) AS moyenne
FROM `moyenne_module` mmoy
INNER JOIN module modu ON (modu.id_module=mmoy.id_module)
WHERE 
  IFNULL(modu.id_periode,0)>0 AND
  mmoy.moyenne IS NOT NULL
GROUP BY
  modu.id_periode,
  mmoy.id_etudiant
) AS semestre ON (
  e.id_etudiant=semestre.id_etudiant AND 
  groupe.id_periode=semestre.id_periode
)
GROUP BY
  e.id_etudiant,
  groupe.cat_note
) AS aide
GROUP BY 
  id_etudiant
HAVING 
  MGS1 IS NOT NULL OR
  MGS2 IS NOT NULL
ORDER BY
  situation,
  nom

----- DERNIERE REQUETE -----


SELECT 
RIGHT(DATABASE(),4) AS annee,
aux_voie.voie_lib,
e.nom,
e.prenom,
e.libelle_etat_civil,
e.id_etudiant,
mo.libelle AS ue,
m.id_type_matiere,
m.intitule AS matiere,
m.code_matiere AS code_matiere,
ROUND(moy.moyenne,2) AS moyenne_matiere,
ROUND(moymo.moyenne,2) AS moyenne_ue,
e.paysnai,
e.id_ref_paysnai,
e.id_nationalite,
e.libelle_statut_etudiant,
e.concours_origine,
e.concours_annee,
e.etab_origine_formation,
e.bac_annee,
e.bac_mention,
e.certif_anglais_org,
e.certif_anglais_score,
e.toeic
FROM moyenne moy
LEFT JOIN etudiant e ON (e.id_etudiant=moy.id_etudiant)
LEFT JOIN matiere m ON (m.id_matiere=moy.id_matiere)
LEFT JOIN module mo ON (m.id_module=mo.id_module)
LEFT JOIN moyenne_module moymo ON (moymo.id_module=m.id_module AND moymo.id_etudiant=e.id_etudiant)
LEFT JOIN (
	SELECT 
	  ve.id_etudiant, 
	  GROUP_CONCAT(DISTINCT v.lib ORDER BY v.lib) AS voie_lib
	FROM voie_etudiant ve
	INNER JOIN voie v ON (v.id_voie=ve.id_voie)
	GROUP BY ve.id_etudiant
) aux_voie ON (aux_voie.id_etudiant=e.id_etudiant)
GROUP BY 
  e.id_etudiant, 
  moymo.id_module, 
  moy.id_matiere
ORDER BY
  aux_voie.voie_lib,
  e.id_etudiant DESC