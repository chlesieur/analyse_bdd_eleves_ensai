---
title: "Analyse_statistique"
format: docx
editor: visual
---

```{r}
library(dplyr)
library(ggplot2)
library(readr)
library(tidyr)
library(forcats)
library(arrow)
library(scales)

bdd <- read_parquet("Z:/0_Direction_des_Etudes/Base  élève/analyse_bdd_eleves_ensai/data/bdd_2015_2024.parquet")

bdd_2 <-  bdd %>% 
  filter(annee_ecole != "Autres")

```

### Nombre d'étudiants par année en 1A, 2A et 3A

```{r}

nb_eleve_par_annee <- bdd_2 %>% 
  distinct(id_etudiant, annee, annee_ecole) %>%
  count(annee, annee_ecole) %>%                   
  pivot_wider(
    names_from  = annee_ecole,                    
    values_from = n,
    names_prefix = "nb_",
    values_fill = 0
  )

nb_eleve_par_annee

```



```{r}

nb_eleve_par_annee %>% 
  pivot_longer(-annee, names_to = "niveau", values_to = "effectif") |>
  mutate(niveau = recode(niveau,
                         nb_1A = "1A",
                         nb_2A = "2A",
                         nb_3A = "3A")) |>
  ggplot(aes(x = factor(annee), y = effectif, fill = niveau)) +
  geom_col(position = position_dodge(width = 0.8)) +
  geom_text(aes(label = comma(effectif)),           # comma() trouvé car scales chargé
            position = position_dodge(width = 0.8),
            vjust = -0.3, size = 3) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
                     labels = comma) +
  scale_fill_brewer(palette = "Set2", name = "Niveau") +
  labs(title = "Effectifs par année et par niveau",
       x = "Année universitaire",
       y = "Nombre d'étudiants") +
  theme_minimal(base_size = 12) +
  theme(legend.position = "top")

```
```{r}


ggplot(nb_long_ord,
       aes(x = annee, y = effectif, fill = niveau)) +
  geom_area(
    alpha    = 0.85,
    colour   = "white",
    position = position_stack(reverse = TRUE)   # 1A en bas
  ) +
  scale_x_continuous(breaks = pretty(nb_long_ord$annee)) +
  scale_y_continuous(
    labels  = comma_format(),
    expand  = expansion(mult = c(0, 0.05))
  ) +
  scale_fill_brewer(
    palette = "Pastel1",
    name    = "Niveau",
    breaks  = c("1A", "2A", "3A")
  ) +
  guides(fill = guide_legend(reverse = TRUE)) +
  
  # ── Style « fond blanc » soigné ───────────────────────────────
  theme_classic(base_size = 13) +                     # base blanche
  theme(
    # Bordure fine autour du panneau
    panel.border       = element_rect(colour = "grey80", fill = NA, linewidth = 0.6),
    # Grille horizontale légère
    panel.grid.major.y = element_line(colour = "grey90", linewidth = 0.4),
    panel.grid.minor   = element_blank(),
    # Axes plus visibles
    axis.line          = element_line(colour = "grey40", linewidth = 0.6),
    # Légende compacte, sur fond blanc sans bordure
    legend.position    = c(0.85, 0.85),
    legend.justification = c("right", "top"),
    legend.background  = element_rect(fill = "white", colour = NA)
  ) +
  
  # Titres
  labs(
    title    = "Évolution des effectifs cumulés par niveau",
    x        = "Année scolaire",
    y        = "Nombre d'étudiants"
  )   

```


```{r}
nb_par_cpge <- bdd_2 %>% 
  filter(annee_ecole == "1A") %>% 
  distinct(id_etudiant, annee, cpge) %>%  
  count(annee, cpge, name = "n") %>%      
  pivot_wider(                                 
    names_from  = cpge,
    values_from = n,
    names_prefix = "nb_",
    values_fill  = 0
  )

nb_par_cpge

```

```{r}

nb_cpge_pct <- nb_cpge_long %>%                 # ← table longue (annee / cpge / effectif)
  group_by(annee) %>%
  mutate(
    pct   = effectif / sum(effectif),
    label = if_else(pct >= 0.05,                 # n'affiche que si ≥ 5 %, sinon ""
                    percent(pct, accuracy = 1),
                    "")
  ) %>%
  ungroup()

# ------------------------------------------------------------------
# 2. Construction du plot
# ------------------------------------------------------------------
p <- ggplot(nb_cpge_pct,
            aes(x = factor(annee),
                y = pct,
                fill = cpge)) +
  geom_col(width = .80, colour = "white") +
  geom_text(                                # ← les % au centre des segments
    aes(label = label),
    position = position_stack(vjust = 0.5),
    colour   = "white",
    size     = 3.0
  ) +
  scale_fill_viridis_d(option = "plasma", name = "Voie d’entrée") +
  scale_y_continuous(
    labels = percent_format(accuracy = 1),
    expand = c(0, 0)
  ) +
  labs(
    title    = "Répartition (%) des 1A par voie d’entrée",
    subtitle = "Chaque barre = 100 % des 1A d’une année (étiquettes ≥ 5 %)",
    x        = "Année universitaire",
    y        = "Part de chaque voie"
  ) +
  theme_classic(base_size = 13) +
  theme(
    panel.grid.major.y = element_line(colour = "grey90"),
    legend.position    = "bottom"
  )

# ------------------------------------------------------------------
# 3. Aperçu à l’écran
# ------------------------------------------------------------------
print(p)

# ------------------------------------------------------------------
# 4. Export PNG haute définition
# ------------------------------------------------------------------
ggsave(
  filename = "repartition_1A_voies.png",
  plot     = p,
  width    = 10,    # pouces (≈25 cm)
  height   = 6,     # pouces
  dpi      = 300    # qualité impression
)

```

```{r}

moyennes_2A <- bdd_2 %>% 
  filter(annee_ecole == "2A") %>%              # ← on garde seulement les 2A
  mutate(moyenne_generale = moyenne_generale / 100) %>%   # échelle 0-20
  group_by(annee, cpge) %>% 
  summarise(
    nb_etudiants = n_distinct(id_etudiant),
    moy_generale = round(mean(moyenne_generale, na.rm = TRUE), 2),
    .groups = "drop"
  )

moyennes_2A

```

```{r}
moyennes_2A <- bdd_2 %>% 
  filter(annee_ecole == "2A") %>%                       # uniquement les 2A
  mutate(moyenne_generale = moyenne_generale / 100) %>% # notes ramenées sur 20
  group_by(annee, cpge) %>% 
  summarise(
    nb_etudiants = n_distinct(id_etudiant),
    moy_generale = mean(moyenne_generale, na.rm = TRUE),
    .groups = "drop"
  ) %>% 
  mutate(label = round(moy_generale, 1))                # étiquette « 12,3 »

# ── 2. Construction du graphique ────────────────────────────────────────────
p <- ggplot(moyennes_2A,
            aes(x = factor(annee),
                y = moy_generale,
                fill = cpge)) +
  geom_col(position = position_dodge(width = .8), width = .7) +
  geom_text(aes(label = sprintf("%.1f", label)),
            position = position_dodge(width = .8),
            vjust = -0.3, size = 3, colour = "black") +
  scale_y_continuous(
    labels = number_format(accuracy = 0.1),
    expand = expansion(mult = c(0, 0.05))
  ) +
  scale_fill_viridis_d(option = "plasma", name = "cpge") +
  labs(
    title    = "Moyenne générale (sur 20) des 2A par voie d’admission",
    x        = "Année universitaire",
    y        = "Moyenne générale"
  ) +
  theme_classic(base_size = 12) +
  theme(
    legend.position    = "bottom",
    panel.grid.major.y = element_line(colour = "grey90")
  )

print(p)   # aperçu à l’écran

# ── 3. Export PNG haute définition ──────────────────────────────────────────
ggsave(
  filename = "moyenne_2A_voies.png",   # change en .pdf ou .svg si besoin
  plot     = p,
  width    = 10,                       # pouces (≈ 25 cm)
  height   = 5,
  dpi      = 300                       # qualité impression
)

```

